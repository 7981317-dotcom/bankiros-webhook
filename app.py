from flask import Flask, request, jsonify
import os

app = Flask(__name__)

# –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —á—Ç–æ —Å–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç
@app.route('/')
def home():
    return "Bankiros Webhook Service is running! üöÄ"

# –û—Å–Ω–æ–≤–Ω–æ–π endpoint –¥–ª—è –ø—Ä–∏–µ–º–∞ –ø–æ—Å—Ç–±—ç–∫–æ–≤ –æ—Ç Bankiros
@app.route('/bankiros/postback', methods=['POST'])
def receive_postback():
    """
    Endpoint –¥–ª—è –ø—Ä–∏–µ–º–∞ –ø–æ—Å—Ç–±—ç–∫–æ–≤ –æ—Ç Bankiros
    """
    try:
        data = request.get_json()
        
        offer_id = data.get('offerId')
        status = data.get('status')
        check_id = data.get('id')
        
        # –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç (–≤ Railway —ç—Ç–æ –ø–æ–ø–∞–¥–µ—Ç –≤ –ª–æ–≥–∏)
        print(f"–ü–æ–ª—É—á–µ–Ω –ø–æ—Å—Ç–±—ç–∫: ID={check_id}, OfferID={offer_id}, Status={status}")
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å—É
        if status == "duplicate":
            print(f"‚ö†Ô∏è –î–£–ë–õ–¨ –û–ë–ù–ê–†–£–ñ–ï–ù! ID –∑–∞—è–≤–∫–∏: {check_id}, –ú–§–û: {offer_id}")
            # –ó–¥–µ—Å—å —Ç–≤–æ—è –ª–æ–≥–∏–∫–∞: —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ –ë–î, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏ —Ç.–¥.
            
        elif status == "not_duplicate":
            print(f"‚úÖ –ù–û–í–´–ô –ö–õ–ò–ï–ù–¢! ID –∑–∞—è–≤–∫–∏: {check_id}, –ú–§–û: {offer_id}")
            # –ó–¥–µ—Å—å —Ç–≤–æ—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
            
        elif status == "error":
            print(f"‚ùå –û–®–ò–ë–ö–ê –ü–†–û–í–ï–†–ö–ò! ID –∑–∞—è–≤–∫–∏: {check_id}, –ú–§–û: {offer_id}")
            # –ó–¥–µ—Å—å —Ç–≤–æ—è –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
        
        return jsonify({"success": True, "received": True}), 200
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Å—Ç–±—ç–∫–∞: {str(e)}")
        return jsonify({"success": False, "error": str(e)}), 400

if __name__ == '__main__':
    # Railway –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç PORT
    port = int(os.environ.get('PORT', 5000))
    app.run(host='0.0.0.0', port=port)
